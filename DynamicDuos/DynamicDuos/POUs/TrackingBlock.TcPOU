<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="TrackingBlock" Id="{b0575d33-e51d-481f-8c5c-542abf7c6b2e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TrackingBlock
VAR_INPUT
	
	fbMotorReference : REFERENCE TO FB_AnalogMotorDriver;
	fbMetadata : REFERENCE TO MetadataBlock; 

END_VAR
VAR_OUTPUT
	
	nEncoderCounts : LINT; 
	rEncoderDegrees : REAL;
	rEncoderLastDegrees : REAL;
	rEncoderRadians : REAL; 
	rEncoderLastRadians : REAL;
	rEncoderRadiansBuffer : ARRAY[1..FILTER_WINDOW] OF REAL;
	rEncoderRadiansSum : REAL;
	rEncoderRadiansFiltered : REAL;
	nFilterBufferCount : INT := 0;
	rGripForce : REAL;

END_VAR
VAR
	
	fbEncoder1 : FB_QuadratureEncoder; 
	fbLoadCell : FB_AnalogLoadCellInput; 
	i : INT;
	j : INT;
	z : LINT := 0; 

END_VAR
VAR CONSTANT
	FILTER_WINDOW : INT := 11;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[///////////// Read sensors on current iteration
// Encoders 
fbEncoder1(); 
nEncoderCounts := fbEncoder1.nNetCounts; 
rEncoderDegrees := fbEncoder1.rDegrees; 
rEncoderLastDegrees := fbEncoder1.rLastDegrees; 
rEncoderRadians := fbEncoder1.rRadians; 
rEncoderLastRadians := fbEncoder1.rLastRadians; 

// test
z := z + 1;

// Update digital filter. 
IF nFilterBufferCount < FILTER_WINDOW THEN 
	nFilterBufferCount := nFilterBufferCount + 1; 
END_IF

// Shift the buffer and add the new reading 
FOR i := FILTER_WINDOW TO 2 BY -1 DO
	rEncoderRadiansBuffer[i] := rEncoderRadiansBuffer[i-1]; 
END_FOR
rEncoderRadiansBuffer[1] := rEncoderRadians;

// Computer the moving average only if the buffer is full
j := MIN(nFilterBufferCount, FILTER_WINDOW); 
rEncoderRadiansSum := 0.0; 
FOR i:= 1 TO j DO
	rEncoderRadiansSum := rEncoderRadiansSum + rEncoderRadiansBuffer[i];
END_FOR
rEncoderRadiansFiltered := rEncoderRadiansSum / j; 

// Load cell 
fbLoadCell(); 
rGripForce := fbLoadCell.rCalibratedOutput; 
///////////// End sensor reading 

//////////////// Report back to main 
GVL.ENCODER_1_COUNTER_VALUE := nEncoderCounts; 
GVL.ENCODER_1_DEGREES := rEncoderDegrees; 
GVL.LOAD_CELL_NEWTONS := rGripForce; 
]]></ST>
    </Implementation>
    <Method Name="Reset" Id="{ce4aa878-021e-4bf9-b715-d2c076cdb3a8}">
      <Declaration><![CDATA[METHOD Reset : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbEncoder1.Reset(); ]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="TrackingBlock">
      <LineId Id="35" Count="7" />
      <LineId Id="81" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="43" Count="22" />
      <LineId Id="9" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="76" Count="1" />
      <LineId Id="75" Count="0" />
      <LineId Id="34" Count="0" />
    </LineIds>
    <LineIds Name="TrackingBlock.Reset">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>