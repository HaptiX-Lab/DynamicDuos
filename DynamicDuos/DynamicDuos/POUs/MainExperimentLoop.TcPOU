<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MainExperimentLoop" Id="{3cc5e467-6ea5-4a66-b5a5-0e59484b2c35}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MainExperimentLoop
VAR

	// To remove later 
	fbEncoder1 : FB_QuadratureEncoder;
	fbMotor1 : FB_AnalogMotorDriver; 
	
	// Variables for logging
	nEncoder1Counts : LINT; 
	rEncoder1Degrees : REAL;

	// Variables for virtual spring 
	rNormalizedWheelPosition : REAL;  
	rCommand : REAL; 	
	rLoadMultiplier : REAL := 1;
	bVeryLightLoad : BOOL := TRUE; 
	bLightLoad : BOOL := FALSE; 
	bMediumLoad : BOOL := FALSE; 
	bModeratelyHeavyLoad : BOOL := FALSE; 
	bHeavyLoad : BOOL := FALSE;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbEncoder1(); 
nEncoder1Counts := fbEncoder1.nNetCounts; 
rEncoder1Degrees := fbEncoder1.rDegrees; 

// Scale between 0 and 90 
rNormalizedWheelPosition := rEncoder1Degrees / 120.0; 

IF rNormalizedWheelPosition > 1 THEN 
	rNormalizedWheelPosition := 1;
ELSIF rNormalizedWheelPosition < -1 THEN 
	rNormalizedWheelPosition := -1;
END_IF 

// Set up load case 
IF bVeryLightLoad THEN 
	rLoadMultiplier := 1.0; 
ELSIF bLightLoad THEN 
	rLoadMultiplier := 2.0; 
ELSIF bMediumLoad THEN 
	rLoadMultiplier := 3.0; 
ELSIF bModeratelyHeavyLoad THEN 
	rLoadMultiplier := 4.0; 
ELSIF bHeavyLoad THEN 
	rLoadMultiplier := 5.0; 
ELSE
	rLoadMultiplier := 1.0; 
END_IF

// Now command the motor correspondingly. 
rCommand := -1 * rNormalizedWheelPosition * rLoadMultiplier; 
fbMotor1(rCommandVoltage := rCommand);]]></ST>
    </Implementation>
    <LineIds Name="MainExperimentLoop">
      <LineId Id="19" Count="11" />
      <LineId Id="62" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="67" Count="2" />
      <LineId Id="71" Count="8" />
      <LineId Id="33" Count="1" />
      <LineId Id="55" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>